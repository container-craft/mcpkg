/* SPDX-License-Identifier: MIT */
/*
 * AUTOGENERATED by mpgen â€” DO NOT EDIT BY HAND.
 * Source schema: /home/jmills/git/opensource/mcpkg/mpgen/schemas/pkg/pkg_meta.yaml
 */

#ifndef MCPKG_MP_MP_PKG_META_H
#define MCPKG_MP_MP_PKG_META_H

#include <stddef.h>
#include <stdint.h>

#include "mcpkg_export.h"

#include "container/mcpkg_str_list.h"
#include "container/mcpkg_list.h"

MCPKG_BEGIN_DECLS

#define MCPKG_MP_MP_PKG_META_TAG "pkg.meta"
#define MCPKG_MP_MP_PKG_META_VER 1

struct McPkgDepends;
struct McPkgFile;
struct McPkgOrigin;

struct McPkgCache {
	char			*id;
	char			*slug;
	char			*version;
	char			*title;
	char			*description;
	char			*license_id;
	char			*home_page;
	char			*source_repo;
	struct McPkgStringList	*loaders;
	struct McPkgStringList	*sections;
	struct McPkgStringList	*configs;
	/* list of struct McPkgDepends * */
	struct McPkgList	*depends;
	struct McPkgFile	*file;
	int32_t			client;
	int32_t			server;
	struct McPkgOrigin	*origin;
	uint32_t		flags;
	uint32_t		schema;
};

MCPKG_API struct McPkgCache *mcpkg_mp_pkg_meta_new(void);
MCPKG_API void mcpkg_mp_pkg_meta_free(struct McPkgCache *p);

MCPKG_API int mcpkg_mp_pkg_meta_pack(const struct McPkgCache *p,
                                     void **out_buf, size_t *out_len);

MCPKG_API int mcpkg_mp_pkg_meta_unpack(const void *buf, size_t len,
                                       struct McPkgCache **out_p);

MCPKG_API char *mcpkg_mp_pkg_meta_debug_str(const struct McPkgCache *p);

MCPKG_END_DECLS

#endif	/* MCPKG_MP_MP_PKG_META_H */
